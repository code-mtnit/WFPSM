<UserControl x:Class="SessionPresent.Tools.SbnTools.GovSessionOrderView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:gepObject="clr-namespace:Sbn.Products.GEP.GEPObject;assembly=Sbn.Products.GEP.GEPObject"
             xmlns:sbntool="clr-namespace:SessionPresent.Tools.SbnTools"
             xmlns:Tools="clr-namespace:SessionPresent.Tools" x:Name="userControl" 
             xmlns:ConTools="clr-namespace:SessionPresent.Tools.Converters"
             mc:Ignorable="d" 
             xmlns:viewModel="clr-namespace:SessionPresent.ViewModel"
             xmlns:Converters="clr-namespace:SessionPresent.Tools.Converters"
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             d:DesignHeight="381" d:DesignWidth="707" 
             Background="{DynamicResource AccentColorBrush}" Loaded="UserControl_Loaded" >
    
    <UserControl.Resources>
        <ConTools:TypeValueConverter x:Key="TypeToStringConverter"/>
        <Converters:TreeViewItemWidthConverter x:Key="TreeViewItemWidthConverter"/>
        <Converters:TreeViewLineConverter x:Key="TreeViewLineConverter"/>
        <Tools:VisiblityToBooleanConverter x:Key="VisiblityToBooleanConverter"/>
        <Converters:ColorNameToSolidBrushConverter x:Key="ColorNameToSolidBrushConverter"/>
        <ContextMenu x:Key="cmsMain"  StaysOpen="true">
            <MenuItem Header="ویرایش" Click="MenuItem_Click" Visibility="{Binding IsSessionManager, Converter={StaticResource VisiblityToBooleanConverter},Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, ElementName=userControl}"/>
        </ContextMenu>
        <Style x:Key="tree" TargetType="TreeView">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TreeView">
                            <Border Name="Border" CornerRadius="5" BorderThickness="2">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="DarkGreen"/>
                                </Border.BorderBrush>
                                <ItemsPresenter/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                        <Image Name="image" Source="/SessionPresent;component/Images/ArrowLeft.png"  Visibility="{Binding HasChild , Mode=OneWay}" />
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="image"  Property="Source"  Value="../../Images/ArrowDown.png" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style  x:Key="ms" TargetType="TreeViewItem" >
            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
            <Setter Property="ContextMenu" Value="{StaticResource ResourceKey=cmsMain}"/>
            <Setter Property="Visibility" Value="{Binding IsVisibleInSessionOrderTree, Converter={StaticResource VisiblityToBooleanConverter}, Mode=TwoWay}" />
            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
            <Setter Property="Background" Value="{Binding Path=TitleBackColor , Converter={StaticResource ColorNameToSolidBrushConverter}}"/>
            <Setter Property="Foreground" Value="{Binding Path=TitleForeColor , Converter={StaticResource ColorNameToSolidBrushConverter}}"/>
            <Setter Property="FontSize" Value="{Binding  TitleFontSize}"/>
                
            <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TreeViewItem">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="19" Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <!-- Connecting Lines -->
                                <ToggleButton Margin="-1,0,0,0" x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                                <ToggleButton Margin="-1,0,0,0" x:Name="Collapsed" Style="{StaticResource ExpandCollapseToggleStyle}" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                                <Border Name="Bd" Grid.Column="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                    <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" MinWidth="20"/>
                                </Border>
                                <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"/>
                            </Grid>

                            <!-- This trigger changes the connecting lines if the item is the last in the list -->

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded" Value="False">
                                    <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                                </Trigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="HasHeader" Value="false"/>
                                        <Condition Property="Width" Value="Auto"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="HasHeader" Value="false"/>
                                        <Condition Property="Height" Value="Auto"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                                </MultiTrigger>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="true"/>
                                        <Condition Property="IsSelectionActive" Value="false"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Bd" Property="Background" Value="Green"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>



    </UserControl.Resources>
    <Grid FlowDirection="RightToLeft" >
        <Grid.RowDefinitions>
            <RowDefinition Height="110"/>
            <RowDefinition Height="25"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="200"/>
            </Grid.ColumnDefinitions>

            <Grid.Effect>
                <DropShadowEffect Opacity="0.5"/>
            </Grid.Effect>
            <Image Grid.Column="0" Source="/SessionPresent;component/Images/Office.Png" Margin="25,25,25,0" />
            <StackPanel Grid.Column="1" Width="180">
                <Image  Source="/SessionPresent;component/Images/Allah0.png" Margin="5,5,0,0" Width="60" />
                <Image  Source="/SessionPresent;component/Images/Gov.png" Margin="5,5,5,10" />
            </StackPanel>
            <Image Grid.Column="2" Source="/SessionPresent;component/Images/Kartable.Png" Margin="5,25,5,0" />

        </Grid>
        
        <!--<TextBlock Grid.Row="1" Text="دستور جلسه مورخ :  " VerticalAlignment="Top" Background="White" Margin="20,0,20,0" FontFamily="B Nazanin" FontSize="16" FontWeight="Bold"/>-->
        <Image HorizontalAlignment="Left" Grid.Row="1" Source="/SessionPresent;component/Images/Pencil.png" Width="24" Height="24" Stretch="Fill" Visibility="{Binding IsSessionManager, Converter={StaticResource VisiblityToBooleanConverter},Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, ElementName=userControl}" Margin="0,0,0,0" MouseUp="Image_MouseUp"></Image>
        <TextBlock Grid.Row="1" Text="{Binding Title}" VerticalAlignment="Top" Background="White" Margin="20,0,20,0" FontFamily="B Nazanin" FontSize="16" FontWeight="Bold">
        </TextBlock>
        <ListView Name="lsvSessionOrder" Grid.Row="2" HorizontalContentAlignment="Stretch" Margin="20,30,20,10" ScrollViewer.HorizontalScrollBarVisibility="Disabled" SelectionChanged="lsvSessionOrder_SelectionChanged" FontFamily="B Nazanin" FontSize="20" FontWeight="Bold" ScrollViewer.CanContentScroll="True" Visibility="Hidden">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <DockPanel Margin="50,5,0,5"  >
                        <!--<TextBlock Name="txtOrder" Text="{Binding Order}" Margin="5,0,0,0"  FontFamily="B Nazanin" FontSize="20" FontWeight="Bold"/>
                        <TextBlock Name="txtSignOrder" Text=")" Margin="2,0,10,0"  FontFamily="B Nazanin" FontSize="20" FontWeight="Bold"/>-->
                        <TextBlock Text="{Binding Title}"  FontFamily="B Nazanin" FontSize="{Binding TitleFontSize}" FontWeight="Bold" TextWrapping="WrapWithOverflow"/>
                    </DockPanel>
                    <!--<DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=Object, Converter={StaticResource ResourceKey=TypeToStringConverter}}" Value="{x:Type gepObject:PreSessionOrder}">
                            <DataTrigger.Setters>
                                <Setter Property="Margin" TargetName="txtOrder" Value="0"/>
                                <Setter Property="Text" TargetName="txtOrder" Value="-"/>
                                <Setter Property="Text" TargetName="txtSignOrder" Value=" "/>
                            </DataTrigger.Setters>
                        </DataTrigger>
                    </DataTemplate.Triggers>-->
                </DataTemplate>
            </ListView.ItemTemplate>
            <!--<ListView.Items>
                <TextBlock Text="بیسب بیس بی"/>
            </ListView.Items>-->
        </ListView>
        <TreeView x:Name="treeview" HorizontalContentAlignment="Stretch" Margin="20,0,20,10" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemsSource="{Binding Children}"  
                  Grid.Row="2" SelectedItemChanged="treeView1SeletedItemChanged" PreviewMouseRightButtonDown="treeview_PreviewMouseRightButtonDown" FontSize="20" 
                  ItemContainerStyle="{StaticResource ms}">
            <TreeView.Resources>
                <HierarchicalDataTemplate DataType="{x:Type viewModel:SessionItemViewModel}"  ItemsSource="{Binding Children}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <!--<Image x:Name="treeImg" Grid.Column="0" Stretch="Fill"  Source="../../images/nodepoint.png"  Width="20" Height="20" Margin="2,0" VerticalAlignment="Center" />-->
                        <TextBlock Grid.Column="1" Text="{Binding Title}" Width="{Binding ActualWidth, Converter={StaticResource TreeViewItemWidthConverter}, ElementName=treeview, Mode=OneWay}" HorizontalAlignment="Stretch" VerticalAlignment="Center" TextWrapping="Wrap" FontFamily="B Nazanin"  FontSize="{Binding TitleFontSize}" FontWeight="Bold"/>
                    </Grid>
                    <!--<HierarchicalDataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsExpanded}" Value="True">
                            <Setter TargetName="treeImg"                Property="Source"                Value="../../Images/nodepoint.png"/>
                        </DataTrigger>
                    </HierarchicalDataTemplate.Triggers>-->
                </HierarchicalDataTemplate>
            </TreeView.Resources>

            <!--<TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                    <Setter Property="ContextMenu" Value="{StaticResource ResourceKey=cmsMain}"/>
                    <Setter Property="Visibility" Value="{Binding IsVisibleInSessionOrderTree, Converter={StaticResource VisiblityToBooleanConverter}, Mode=TwoWay}" />
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="Background" Value="{Binding Path=TitleBackColor , Converter={StaticResource ColorNameToSolidBrushConverter}}"/>
                    <Setter Property="Foreground" Value="{Binding Path=TitleForeColor , Converter={StaticResource ColorNameToSolidBrushConverter}}"/>
                    <Setter Property="FontWeight" Value="Normal" />
                </Style>
            </TreeView.ItemContainerStyle>-->

        </TreeView>
    </Grid>
    
</UserControl>
